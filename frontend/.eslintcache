[{"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\App.js":"1","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\index.js":"2","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Loppis.js":"3","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Login.js":"4","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Navbar.js":"5","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\context\\AuthContext.js":"6","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Register.js":"7","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Store.js":"8","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\InsideStore.js":"9","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\context\\BasketContext.js":"10","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Basket.js":"11","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Account.js":"12","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Checkout.js":"13","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\services\\AuthService.js":"14","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\services\\ProductService.js":"15","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\services\\UserService.js":"16","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\CheckoutItem.js":"17","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\OrderItem.js":"18","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\services\\AddressService.js":"19","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\staticData\\Products.js":"20","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\PersonalInfo.js":"21","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Products.js":"22","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Address.js":"23","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\services\\OrderService.js":"24","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\hocs\\PrivateRoute.js":"25","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\hocs\\UnPrivateRoute.js":"26","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\staticData\\Stores.js":"27"},{"size":1254,"mtime":1610544787026,"results":"28","hashOfConfig":"29"},{"size":604,"mtime":1606141969163,"results":"30","hashOfConfig":"29"},{"size":692,"mtime":1607349984602,"results":"31","hashOfConfig":"29"},{"size":1422,"mtime":1607346333525,"results":"32","hashOfConfig":"29"},{"size":3738,"mtime":1607347108727,"results":"33","hashOfConfig":"29"},{"size":854,"mtime":1607345184470,"results":"34","hashOfConfig":"29"},{"size":1335,"mtime":1607421737497,"results":"35","hashOfConfig":"29"},{"size":570,"mtime":1612277752534,"results":"36","hashOfConfig":"29"},{"size":2602,"mtime":1612273937284,"results":"37","hashOfConfig":"29"},{"size":669,"mtime":1612277339048,"results":"38","hashOfConfig":"29"},{"size":2596,"mtime":1612274545919,"results":"39","hashOfConfig":"29"},{"size":4514,"mtime":1612174281481,"results":"40","hashOfConfig":"29"},{"size":1702,"mtime":1612184406147,"results":"41","hashOfConfig":"29"},{"size":1300,"mtime":1607346209065,"results":"42","hashOfConfig":"29"},{"size":1451,"mtime":1610533367429,"results":"43","hashOfConfig":"29"},{"size":600,"mtime":1607935565358,"results":"44","hashOfConfig":"29"},{"size":5997,"mtime":1612281381913,"results":"45","hashOfConfig":"29"},{"size":3310,"mtime":1612174418034,"results":"46","hashOfConfig":"29"},{"size":1165,"mtime":1610529778135,"results":"47","hashOfConfig":"29"},{"size":349,"mtime":1606079931452,"results":"48","hashOfConfig":"29"},{"size":3549,"mtime":1610525830305,"results":"49","hashOfConfig":"29"},{"size":2841,"mtime":1610534270673,"results":"50","hashOfConfig":"29"},{"size":4944,"mtime":1612166888718,"results":"51","hashOfConfig":"29"},{"size":2306,"mtime":1612171955830,"results":"52","hashOfConfig":"29"},{"size":641,"mtime":1610544543881,"results":"53","hashOfConfig":"29"},{"size":646,"mtime":1610544745624,"results":"54","hashOfConfig":"29"},{"size":250,"mtime":1606078972020,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xiqe6m",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\App.js",[],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\index.js",[],["131","132"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Loppis.js",["133"],"import React, { useState, useEffect } from \"react\";\r\nimport Stores from \"../staticData/Stores\";\r\nimport Store from \"./Store\";\r\nimport UserService from \"../services/UserService\";\r\n\r\nconst Loppis = () => {\r\n  const [stores, setStores] = useState([]);\r\n\r\n  const getStores = () => {\r\n    UserService.getUsers().then((data) => {\r\n      setStores(data.users);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStores();\r\n  }, []);\r\n\r\n  console.log(stores);\r\n\r\n  return (\r\n    <>\r\n      <h1>Loppis</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        {stores.map((store) => (\r\n          <Store key={store._id} store={store} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loppis;\r\n",["134","135"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Login.js",[],["136","137"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Navbar.js",[],["138","139"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\context\\AuthContext.js",["140"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Register.js",["141"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n\r\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\r\n\r\n  //message state to be used for snackbar notifications later\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    AuthService.register(user).then((data) => {\r\n      const { message } = data;\r\n      setMessage(message);\r\n      if (!message.msgError) {\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  console.log(user);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"username\"\r\n          value={user.username}\r\n          onChange={onChange}\r\n          required\r\n          placeholder=\"Username\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={user.password}\r\n          onChange={onChange}\r\n          required\r\n          placeholder=\"Password\"\r\n        />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n",["142","143"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Store.js",[],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\InsideStore.js",["144","145"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\context\\BasketContext.js",["146"],"import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const BasketContext = createContext();\r\n\r\nexport default ({ children }) => {\r\n  const [basket, setBasket] = useState([]);\r\n  const [showBasket, setShowBasket] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let fromStorage = JSON.parse(localStorage.getItem(\"storageBasket\"));\r\n    if (fromStorage) {\r\n      setBasket(fromStorage);\r\n    }\r\n    console.log(fromStorage);\r\n  }, [basket]);\r\n\r\n  return (\r\n    <div>\r\n      <BasketContext.Provider\r\n        value={{ basket, setBasket, showBasket, setShowBasket }}\r\n      >\r\n        {children}\r\n      </BasketContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n",["147","148"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Basket.js",[],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Account.js",["149","150","151","152"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport ProductService from \"../services/ProductService\";\r\nimport OrderService from \"../services/OrderService\";\r\nimport UserService from \"../services/UserService\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport AddressService from \"../services/AddressService\";\r\nimport PersonalInfo from \"./PersonalInfo\";\r\nimport Products from \"./Products\";\r\nimport Address from \"./Address\";\r\n\r\nconst Account = () => {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const [orderHistory, setOrderHistory] = useState([]);\r\n\r\n  //message state to be used for snackbar notifications later\r\n  const [message, setMessage] = useState(null);\r\n\r\n  //Product handlers\r\n  const removeProduct = (product) => {\r\n    ProductService.removeProduct(product).then((data) => {\r\n      const { message } = data;\r\n      if (!message.msgError) {\r\n        ProductService.getMyProducts().then((data) => {\r\n          setProducts(data.products);\r\n          setMessage(message);\r\n        });\r\n      } else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authContext.setUser({ username: \"\" });\r\n        authContext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  //order handlers\r\n  const removeOrder = (order) => {\r\n    OrderService.removeOrder(order).then((data) => {\r\n      const { message } = data;\r\n      if (!message.msgError) {\r\n        OrderService.getOrders().then((data) => {\r\n          setOrders(data.orders);\r\n          setMessage(message);\r\n        });\r\n      } else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authContext.setUser({ username: \"\" });\r\n        authContext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleOrder = (order) => {\r\n    OrderService.handleOrder(order).then((data) => {\r\n      const { message } = data;\r\n      if (!message.msgError) {\r\n        OrderService.getOrders().then((data) => {\r\n          setOrders(data.orders);\r\n          setMessage(message);\r\n        });\r\n      } else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authContext.setUser({ username: \"\" });\r\n        authContext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authContext.user.username !== \"\") {\r\n      ProductService.getMyProducts().then((data) => {\r\n        if (data && data.products) {\r\n          setProducts(data.products);\r\n        }\r\n      });\r\n      OrderService.getOrders().then((data) => {\r\n        if (data && data.orders) {\r\n          setOrders(data.orders);\r\n        }\r\n      });\r\n      OrderService.getOrderHistory().then((data) => {\r\n        setOrderHistory(data.orderHistory);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Account</h1>\r\n      <PersonalInfo authContext={authContext} setMessage={setMessage} />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          margin: \"10px 0px\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Products\r\n          authContext={authContext}\r\n          setMessage={setMessage}\r\n          products={products}\r\n          setProducts={setProducts}\r\n          removeProduct={removeProduct}\r\n        />\r\n        <div>\r\n          <p style={{ fontWeight: \"bold\" }}>\r\n            Incoming orders (\r\n            {orders.filter((order) => order.handled === false).length})\r\n          </p>\r\n          {orders\r\n            .slice()\r\n            .reverse()\r\n            .map((order) => (\r\n              <OrderItem\r\n                key={order._id}\r\n                order={order}\r\n                removeOrder={removeOrder}\r\n                handleOrder={handleOrder}\r\n              />\r\n            ))}\r\n        </div>\r\n        <Address authContext={authContext} setMessage={setMessage} />\r\n      </div>\r\n      <div style={{ padding: \"20px 20px 0px 0px\", width: \"33%\" }}>\r\n        <p style={{ fontWeight: \"bold\", marginTop: \"0px\" }}>Order history</p>\r\n        {orderHistory.map((order) => (\r\n          <OrderItem\r\n            order={order}\r\n            key={order._id}\r\n            removeOrder={removeOrder}\r\n            orderHistory={true}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Checkout.js",["153"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\services\\AuthService.js",["154"],"export default {\r\n  register: (user) => {\r\n    return fetch(\"/users/user/register\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  login: (user) => {\r\n    return fetch(\"/users/user/login\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    }).then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return {\r\n          isAuthenticated: false,\r\n          user: { _id: null, username: \"\" },\r\n          message: { msgBody: \"Unauthorized\", msgError: true },\r\n        };\r\n      }\r\n    });\r\n  },\r\n  logout: () => {\r\n    return fetch(\"/users/user/logout\")\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  isAuthenticated: () => {\r\n    return fetch(\"/users/user/authenticated\").then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return {\r\n          isAuthenticated: false,\r\n          user: { _id: null, username: \"\" },\r\n          message: { msgBody: \"Unauthorized\", msgError: true },\r\n        };\r\n      }\r\n    });\r\n  },\r\n};\r\n",["155","156"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\services\\ProductService.js",["157"],"export default {\r\n  getProducts: (userId) => {\r\n    return fetch(\"/users/user/getproducts\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(userId),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      return res.json().then((data) => data);\r\n    });\r\n  },\r\n  getMyProducts: () => {\r\n    return fetch(\"/users/user/getmyproducts\").then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n  newProduct: (product) => {\r\n    return fetch(\"users/user/newproduct\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(product),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    }).then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n  removeProduct: (product) => {\r\n    return fetch(\"/users/user/removeproduct\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(product),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n};\r\n","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\services\\UserService.js",["158"],"export default {\r\n  getUsers: () => {\r\n    return fetch(\"/users/getallusers\").then((res) => {\r\n      return res.json().then((data) => data);\r\n    });\r\n  },\r\n  updateUser: (personalInfo) => {\r\n    return fetch(\"/users/user/updateuser\", {\r\n      method: \"put\",\r\n      body: JSON.stringify(personalInfo),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n};\r\n","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\CheckoutItem.js",["159","160"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\OrderItem.js",[],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\services\\AddressService.js",["161"],"export default {\r\n  newAddress: (address) => {\r\n    return fetch(\"/users/user/newaddress\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(address),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n  updateAddress: (address) => {\r\n    return fetch(\"/users/user/updateaddress\", {\r\n      method: \"put\",\r\n      body: JSON.stringify(address),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n  getAddress: () => {\r\n    return fetch(\"users/user/getaddress\").then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n};\r\n","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\staticData\\Products.js",["162"],"export default {\r\n  getProducts: () => {\r\n    return [\r\n      { id: 1, name: \"levergodis\", price: 10 },\r\n      { id: 2, name: \"baconben\", price: 30 },\r\n      { id: 3, name: \"klubba\", price: 5 },\r\n      { id: 4, name: \"choklad\", price: 15 },\r\n      { id: 5, name: \"Cola\", price: 10 },\r\n      { id: 6, name: \"Redbull\", price: 15 },\r\n    ];\r\n  },\r\n};\r\n",["163","164"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\PersonalInfo.js",["165"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Products.js",[],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\components\\Address.js",["166"],"import React, { useState, useEffect } from \"react\";\r\nimport AddressService from \"../services/AddressService\";\r\n\r\nconst Address = (props) => {\r\n  const { authContext, setMessage } = props;\r\n\r\n  const [address, setAddress] = useState({\r\n    id: null,\r\n    street: \"\",\r\n    zipCode: \"\",\r\n    town: \"\",\r\n    country: \"\",\r\n  });\r\n  const [addingAddress, setAddingAddress] = useState(false);\r\n  const [changingAddress, setChangingAddress] = useState(false);\r\n\r\n  const onChangeAddress = (e) => {\r\n    setAddress({ ...address, [e.target.name]: e.target.value });\r\n  };\r\n  const addAddress = (e) => {\r\n    e.preventDefault();\r\n    AddressService.newAddress(address).then((data) => {\r\n      const { message } = data;\r\n      if (!message.msgError) {\r\n        AddressService.getAddress().then((data) => {\r\n          setAddingAddress(false);\r\n          setAddress(data.address);\r\n          setMessage(message);\r\n        });\r\n      } else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authContext.setUser({ username: \"\" });\r\n        authContext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const changeAddress = (e) => {\r\n    e.preventDefault();\r\n    AddressService.updateAddress(address).then((data) => {\r\n      const { message } = data;\r\n      if (!message.msgError) {\r\n        AddressService.getAddress().then((data) => {\r\n          setChangingAddress(false);\r\n          setAddress(data.address);\r\n          setMessage(message);\r\n        });\r\n      } else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authContext.setUser({ username: \"\" });\r\n        authContext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authContext.user.username !== \"\") {\r\n      AddressService.getAddress().then((data) => {\r\n        if (data && data.address) {\r\n          setAddress(data.address);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p style={{ fontWeight: \"bold\" }}>Address</p>\r\n      {!addingAddress &&\r\n        address.street === \"\" &&\r\n        address.zipCode === \"\" &&\r\n        address.town === \"\" &&\r\n        address.country === \"\" && (\r\n          <button onClick={() => setAddingAddress(true)}>Add address</button>\r\n        )}\r\n      {!changingAddress &&\r\n        (address.street !== \"\" ||\r\n          address.zipCode !== \"\" ||\r\n          address.town !== \"\" ||\r\n          address.country !== \"\") && (\r\n          <button onClick={() => setChangingAddress(true)}>\r\n            Change address\r\n          </button>\r\n        )}\r\n      {addingAddress && (\r\n        <form\r\n          onSubmit={addAddress}\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <input\r\n            name=\"street\"\r\n            value={address.street}\r\n            onChange={onChangeAddress}\r\n            required\r\n            placeholder=\"Street\"\r\n          />\r\n          <input\r\n            name=\"zipCode\"\r\n            value={address.zipCode}\r\n            onChange={onChangeAddress}\r\n            required\r\n            placeholder=\"Zipcode\"\r\n          />\r\n          <input\r\n            name=\"town\"\r\n            value={address.town}\r\n            onChange={onChangeAddress}\r\n            required\r\n            placeholder=\"Town\"\r\n          />\r\n          <input\r\n            name=\"country\"\r\n            value={address.country}\r\n            onChange={onChangeAddress}\r\n            required\r\n            placeholder=\"country\"\r\n          />\r\n          <button type=\"submit\">Save</button>\r\n          <button onClick={() => setAddingAddress(false)}>Close</button>\r\n        </form>\r\n      )}\r\n      {changingAddress && (\r\n        <form\r\n          onSubmit={changeAddress}\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <input\r\n            name=\"street\"\r\n            value={address.street}\r\n            onChange={onChangeAddress}\r\n            required\r\n            placeholder=\"Street\"\r\n          />\r\n          <input\r\n            name=\"zipCode\"\r\n            value={address.zipCode}\r\n            onChange={onChangeAddress}\r\n            required\r\n            placeholder=\"Zipcode\"\r\n          />\r\n          <input\r\n            name=\"town\"\r\n            value={address.town}\r\n            onChange={onChangeAddress}\r\n            required\r\n            placeholder=\"Town\"\r\n          />\r\n          <input\r\n            name=\"country\"\r\n            value={address.country}\r\n            onChange={onChangeAddress}\r\n            required\r\n            placeholder=\"country\"\r\n          />\r\n          <button type=\"submit\">Save</button>\r\n          <button onClick={() => setChangingAddress(false)}>Close</button>\r\n        </form>\r\n      )}\r\n      <p>{address.street}</p>\r\n      <p>{address.zipCode}</p>\r\n      <p>{address.town}</p>\r\n      <p>{address.country}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\services\\OrderService.js",["167"],"export default {\r\n  newOrder: (order) => {\r\n    return fetch(\"/users/user/neworder\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(order),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n  newOrderHistoryItem: (order) => {\r\n    return fetch(\"/users/user/neworderhistoryitem\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(order),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unautorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n  getOrders: () => {\r\n    return fetch(\"users/user/getorders\").then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n  getOrderHistory: () => {\r\n    return fetch(\"users/user/getorderhistory\").then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n  removeOrder: (order) => {\r\n    return fetch(\"/users/user/removeorder\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(order),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n  handleOrder: (order) => {\r\n    return fetch(\"/users/user/handleorder\", {\r\n      method: \"put\",\r\n      body: JSON.stringify(order),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) {\r\n        return res.json().then((data) => data);\r\n      } else {\r\n        return { message: { msgBody: \"Unauthorized\", msgError: true } };\r\n      }\r\n    });\r\n  },\r\n};\r\n","C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\hocs\\PrivateRoute.js",[],["168","169"],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\hocs\\UnPrivateRoute.js",[],"C:\\Users\\ChristianJohannesson\\Desktop\\Projects\\loppis\\frontend\\src\\staticData\\Stores.js",["170"],"export default {\r\n  getStores: () => {\r\n    return [\r\n      { id: 1, name: \"Lunas hundgodis\", products: [1, 2] },\r\n      { id: 2, name: \"Crilles godis\", products: [3, 4] },\r\n      { id: 3, name: \"Pelles läsk\", products: [5, 6] },\r\n    ];\r\n  },\r\n};\r\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"171","replacedBy":"179"},{"ruleId":"173","replacedBy":"180"},{"ruleId":"171","replacedBy":"181"},{"ruleId":"173","replacedBy":"182"},{"ruleId":"171","replacedBy":"183"},{"ruleId":"173","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":6,"column":1,"nodeType":"187","endLine":32,"endColumn":3},{"ruleId":"175","severity":1,"message":"188","line":11,"column":10,"nodeType":"177","messageId":"178","endLine":11,"endColumn":17},{"ruleId":"171","replacedBy":"189"},{"ruleId":"173","replacedBy":"190"},{"ruleId":"175","severity":1,"message":"176","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"191","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":16},{"ruleId":"185","severity":1,"message":"186","line":5,"column":1,"nodeType":"187","endLine":26,"endColumn":3},{"ruleId":"171","replacedBy":"192"},{"ruleId":"173","replacedBy":"193"},{"ruleId":"175","severity":1,"message":"194","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":19},{"ruleId":"175","severity":1,"message":"195","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":22},{"ruleId":"175","severity":1,"message":"188","line":22,"column":10,"nodeType":"177","messageId":"178","endLine":22,"endColumn":17},{"ruleId":"196","severity":1,"message":"197","line":96,"column":6,"nodeType":"198","endLine":96,"endColumn":8,"suggestions":"199"},{"ruleId":"175","severity":1,"message":"176","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"200","line":1,"column":1,"nodeType":"187","endLine":46,"endColumn":3},{"ruleId":"171","replacedBy":"201"},{"ruleId":"173","replacedBy":"202"},{"ruleId":"185","severity":1,"message":"200","line":1,"column":1,"nodeType":"187","endLine":50,"endColumn":3},{"ruleId":"185","severity":1,"message":"200","line":1,"column":1,"nodeType":"187","endLine":22,"endColumn":3},{"ruleId":"196","severity":1,"message":"203","line":68,"column":6,"nodeType":"198","endLine":68,"endColumn":22,"suggestions":"204"},{"ruleId":"196","severity":1,"message":"205","line":88,"column":6,"nodeType":"198","endLine":88,"endColumn":35,"suggestions":"206"},{"ruleId":"185","severity":1,"message":"200","line":1,"column":1,"nodeType":"187","endLine":41,"endColumn":3},{"ruleId":"185","severity":1,"message":"200","line":1,"column":1,"nodeType":"187","endLine":12,"endColumn":3},{"ruleId":"171","replacedBy":"207"},{"ruleId":"173","replacedBy":"208"},{"ruleId":"196","severity":1,"message":"209","line":52,"column":6,"nodeType":"198","endLine":52,"endColumn":26,"suggestions":"210"},{"ruleId":"196","severity":1,"message":"197","line":68,"column":6,"nodeType":"198","endLine":68,"endColumn":8,"suggestions":"211"},{"ruleId":"185","severity":1,"message":"200","line":1,"column":1,"nodeType":"187","endLine":80,"endColumn":3},{"ruleId":"171","replacedBy":"212"},{"ruleId":"173","replacedBy":"213"},{"ruleId":"185","severity":1,"message":"200","line":1,"column":1,"nodeType":"187","endLine":9,"endColumn":3},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'Stores' is defined but never used.","Identifier","unusedVar",["214"],["215"],["214"],["215"],["214"],["215"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'message' is assigned a value but never used.",["214"],["215"],"'Products' is defined but never used.",["214"],["215"],"'UserService' is defined but never used.","'AddressService' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authContext.user.username'. Either include it or remove the dependency array.","ArrayExpression",["216"],"Assign object to a variable before exporting as module default",["214"],["215"],"React Hook useEffect has missing dependencies: 'authContext.isAuthenticated', 'basketContext', 'order', and 'setMessage'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has missing dependencies: 'authContext.user.email', 'authContext.user.firstname', 'authContext.user.lastname', 'authContext.user.phone', and 'order'. Either include them or remove the dependency array. You can also do a functional update 'setOrder(o => ...)' if you only need 'order' in the 'setOrder' call.",["218"],["214"],["215"],"React Hook useEffect has missing dependencies: 'authContext.user.email', 'authContext.user.firstname', 'authContext.user.lastname', 'authContext.user.phone', and 'personalInfo'. Either include them or remove the dependency array. You can also do a functional update 'setPersonalInfo(p => ...)' if you only need 'personalInfo' in the 'setPersonalInfo' call.",["219"],["220"],["214"],["215"],"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"221","fix":"229"},"Update the dependencies array to be: [authContext.user.username]",{"range":"230","text":"231"},"Update the dependencies array to be: [authContext.isAuthenticated, basketContext, order, order.products, setMessage]",{"range":"232","text":"233"},"Update the dependencies array to be: [authContext.isAuthenticated, authContext.user.email, authContext.user.firstname, authContext.user.lastname, authContext.user.phone, order]",{"range":"234","text":"235"},"Update the dependencies array to be: [addingPersonalInfo, authContext.user.email, authContext.user.firstname, authContext.user.lastname, authContext.user.phone, personalInfo]",{"range":"236","text":"237"},{"range":"238","text":"231"},[3009,3011],"[authContext.user.username]",[1955,1971],"[authContext.isAuthenticated, basketContext, order, order.products, setMessage]",[2579,2608],"[authContext.isAuthenticated, authContext.user.email, authContext.user.firstname, authContext.user.lastname, authContext.user.phone, order]",[1564,1584],"[addingPersonalInfo, authContext.user.email, authContext.user.firstname, authContext.user.lastname, authContext.user.phone, personalInfo]",[2005,2007]]